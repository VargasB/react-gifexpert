{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","loadings","useFetchGifs","key","GifExpertApp","Titulo","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,UAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,QAOd,2BACIO,KAAO,OACPC,MAAST,EACTU,SAnBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCNnBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAUH,GAFvF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAZ,SAASO,EAAT,GAAsC,IAAfH,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAIlC,OACI,yBAAKc,UAAU,2CACX,yBAAKC,IAAMf,EAAKgB,IAAON,IACvB,2BAAIA,ICLT,IAAMO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAE9BqB,KAAK,GACLa,SAAS,IALyB,mBAE/BC,EAF+B,KAEzBC,EAFyB,KAqBtC,OAbAC,qBAAU,WACLxB,EAAQC,GACJwB,MAAM,SAAAC,GAEHC,YAAY,WACRJ,EAAS,CACLf,KAAKkB,EACLE,UAAU,MAEhB,UAEX,CAAC3B,IAEGqB,EDlBsBO,CAAa5B,GAA9Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAEnB,OACI,oCACI,wBAAIJ,UAAY,oCAAoChB,GAEnDoB,GAAW,uBAAGJ,UAAY,oCAAf,WAEZ,yBAAKA,UAAW,aAERH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAACK,EAAD,eACIc,IAAOnB,EAAIC,IACPD,UEkBjBoB,EAlCM,SAAC,GAAiC,IAAD,IAA/BC,cAA+B,MAAtB,iBAAsB,IAEd7C,mBAAU,CAAC,WAFG,mBAE3C8C,EAF2C,KAE/B/C,EAF+B,KAQlD,OAGI,oCACI,wBAAI+B,UAAY,uDAAhB,IAAyEe,EAAzE,KACA,6BAEA,kBAAC,EAAD,CAAa9C,cAAeA,IAE5B,4BAEQ+C,EAAWvB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI6B,IAAK7B,EACLA,SAAUA,UCjBhCiC,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAO,kBAAC,EAAD,MAAiBJ,I","file":"static/js/main.ba09d414.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('Buscar');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value);\r\n    } \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 0){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue(' ');\r\n        }\r\n\r\n       \r\n    }\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n            \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=AqEUXyasyzTCc18qYxKKMVGTvU8znUkt&q=${ encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => { \r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport  function GifGridItem( {title, url} ) {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\" card animate__animated animate__fadeIn\">\r\n            <img src= {url} alt = {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images,loading}= useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className = \"animate__animated animate__swing\">{category}</h3>\r\n\r\n            {loading && <p className = \"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className ='card-grid'>\r\n            {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import {useEffect,useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state,setState] = useState({\r\n\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n         getGifs(category)\r\n            .then( imgs => {\r\n\r\n                setTimeout( () =>{\r\n                    setState({\r\n                        data:imgs,\r\n                        loadings: false\r\n                    });\r\n                },3000);\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport {GifGrid} from './Components/GifGrid';\r\n\r\nconst GifExpertApp = ({Titulo = 'Gif Expert App'}) => {\r\n    \r\n    const [categories, setCategories] = useState (['baymax']);\r\n        \r\n    // const handleAdd = () => {\r\n    //     setCategories( cats => [...cats,'HunterxHunter']);\r\n    // };\r\n    \r\n    return (\r\n        \r\n       \r\n        <>\r\n            <h1 className = \"animate__animated animate__bounce animate__repeat-3\"> { Titulo } </h1>\r\n            <hr />\r\n\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\n\n\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(<GifExpertApp />,divRoot);\n\n// ReactDOM.render(<GifExpertApp />document.getElementById('root'));\n\n\n"],"sourceRoot":""}